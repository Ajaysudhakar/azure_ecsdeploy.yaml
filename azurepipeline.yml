trigger:
  branches:
    include:
      - master

pool:
  vmImage: 'ubuntu-latest'

variables:
  awsRegion: 'us-east-1'
  awsCredentials: 'ecs1234'
  awsAccountId: '255768165268'
  clusterName: 'ecscluster'
  serviceName: 'ecrcontainer'
  imageTag: 'latest'
  imageRepository: 'application_deploy'

stages:
- stage: Docker
  displayName: 'Build & Push Docker image to AWS ECR'
  jobs:
  - job: Build_and_Push
    displayName: 'Build & Push Docker image'
    pool:
      vmImage: ubuntu-latest
    steps:
    - checkout: self

    - task: Docker@2
      displayName: 'Build an image'
      inputs:
        command: build
        dockerfile: '$(Build.SourcesDirectory)/Dockerfile'
        buildContext: '$(Build.SourcesDirectory)'
        repository: '$(imageRepository)'
        tags: '$(imageTag)'

    - script: |
        echo "##vso[task.setvariable variable=imageName]$(imageRepository)"
        echo "##vso[task.setvariable variable=sourceImageName]$(imageRepository)"
      displayName: 'Set Image Name and Source Image Name'

    - task: ECRPushImage@1
      inputs:
        awsCredentials: '$(awsCredentials)'
        regionName: '$(awsRegion)'
        sourceImageName: '$(sourceImageName)'
        repositoryName: '$(imageRepository)'

- stage: ECS
  displayName: 'Deploy to ECS'
  dependsOn: Docker
  jobs:
  - job: Deploy_to_ECS
    displayName: 'Deploy to ECS'
    pool:
      vmImage: ubuntu-latest
    steps:
    - script: |
        aws configure set aws_access_key_id AKIATXDHYPOKF5FA4PMR
        aws configure set aws_secret_access_key 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
        aws configure set default.region $(awsRegion)
      displayName: 'Configure AWS CLI'

    - script: |
        aws ecr get-login-password --region $(awsRegion) | docker login --username AWS --password-stdin $(awsAccountId).dkr.ecr.$(awsRegion).amazonaws.com
        docker pull $(awsAccountId).dkr.ecr.$(awsRegion).amazonaws.com/$(imageRepository):$(imageTag)
        $imageUri = "$(awsAccountId).dkr.ecr.$(awsRegion).amazonaws.com/$(imageRepository):$(imageTag)"
        $imageDigest = docker inspect --format='{{index .RepoDigests 0}}' $imageUri
        echo "##vso[task.setvariable variable=imageDigest]$imageDigest"
      displayName: 'Pull Image from ECR and Retrieve Digest'

    - powershell: |
        $imageUri = "$(awsAccountId).dkr.ecr.$(awsRegion).amazonaws.com/$(imageRepository):$(imageTag)"
        echo "##vso[task.setvariable variable=imageUri]$imageUri"
      displayName: 'Set Image URI'

    - script: |
        aws ecs update-service --cluster $(clusterName) --service $(serviceName) --force-new-deployment --task-definition arn:aws:ecs:us-east-1:255768165268:task-definition/web_ecs:1
      displayName: 'Deploy to ECS Service'
